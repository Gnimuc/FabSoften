name: CI

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']

env:
  BUILD_TYPE: Release
  OPENCV_VER: 4.5.4
  DLIB_FACE_MODEL: shape_predictor_68_face_landmarks.dat.bz2

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set OpenCV Prefix
      id: cv
      run: echo "::set-output name=OPENCV_PREFIX::C:\depot\opencv\${{env.OPENCV_VER}}"

    - name: Set dlib Prefix
      id: dlib
      run: echo "::set-output name=DLIB_PREFIX::C:\depot\dlib\models"

    - name: Set Doxygen Prefix
      id: doxygen
      run: echo "::set-output name=DOXYGEN_PREFIX::C:\depot\doxygen"

    - name: Set Install Prefix
      id: pfx
      run: echo "::set-output name=INSTALL_PREFIX::C:\opt"

    - name: Cache
      id: cache
      uses: actions/cache@v2.1.6
      with:
        path: C:\depot
        key: OpenCV-${{env.OPENCV_VER}}-Doxygen

    - name: Download & Cache Doxygen
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        New-Item ${{steps.doxygen.outputs.DOXYGEN_PREFIX}} -ItemType directory
        Invoke-WebRequest -Uri https://www.doxygen.nl/files/doxygen-1.9.2-setup.exe -UserAgent "NativeHost" -OutFile ${{steps.doxygen.outputs.DOXYGEN_PREFIX}}\doxygen_setup.exe
        ls ${{steps.doxygen.outputs.DOXYGEN_PREFIX}}
    
    - name: Install Doxygen
      run: |
        $installer = Start-Process -FilePath ${{steps.doxygen.outputs.DOXYGEN_PREFIX}}\doxygen_setup.exe -Wait -PassThru -ArgumentList @("/VERYSILENT");
        $installer.WaitForExit();

    - name: Download & Install & Cache OpenCV
      if: steps.cache.outputs.cache-hit != 'true'
      run: | 
        Invoke-WebRequest -Uri https://sourceforge.net/projects/opencvlibrary/files/${{env.OPENCV_VER}}/opencv-${{env.OPENCV_VER}}-vc14_vc15.exe/download -UserAgent "NativeHost" -OutFile ../opencv-${{env.OPENCV_VER}}.exe
        $installer = Start-Process -FilePath ../opencv-${{env.OPENCV_VER}}.exe -Wait -PassThru -ArgumentList @("-o${{steps.cv.outputs.OPENCV_PREFIX}} -y");
        $installer.WaitForExit();
        ls ${{steps.cv.outputs.OPENCV_PREFIX}}

    - name: Setup OpenCV Env
      run: |
        echo "${{steps.cv.outputs.OPENCV_PREFIX}}\opencv\build\x64\vc15\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "${{steps.cv.outputs.OPENCV_PREFIX}}\opencv\build\x64\vc15\lib" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        $ENV:Path.Split(";")
    
    - name: Setup Installation Env
      run: |
        New-Item ${{steps.pfx.outputs.INSTALL_PREFIX}} -ItemType directory
        echo ${{steps.pfx.outputs.INSTALL_PREFIX}} | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo ${{steps.pfx.outputs.INSTALL_PREFIX}} | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        $ENV:Path.Split(";")

    - name: Download & Cache dlib Models
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        Invoke-WebRequest -Uri https://github.com/davisking/dlib-models/raw/master/${{env.DLIB_FACE_MODEL}} -OutFile ../${{env.DLIB_FACE_MODEL}}
        New-Item ${{steps.dlib.outputs.DLIB_PREFIX}} -ItemType directory
        Move-Item -Path ../${{env.DLIB_FACE_MODEL}} -Destination ${{steps.dlib.outputs.DLIB_PREFIX}}
        ls ${{steps.dlib.outputs.DLIB_PREFIX}}
    
    - name: Prebuild
      run: |
        Start-Process -FilePath 7z.exe -Wait -PassThru -ArgumentList @("x ${{steps.dlib.outputs.DLIB_PREFIX}}\${{env.DLIB_FACE_MODEL}} -o${{github.workspace}}\models");
        New-Item ${{github.workspace}}\build -ItemType directory

    - name: Build
      working-directory: ${{github.workspace}}\build
      run: |
        cmake .. -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=${{steps.pfx.outputs.INSTALL_PREFIX}} -DFABSOFTEN_BUILD_TESTS=true -DFABSOFTEN_BUILD_DOCS=true
        cmake --build . --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}\build
      run: ctest -C ${{env.BUILD_TYPE}} --verbose
      
    - name: Run Doxygen
      working-directory: ${{github.workspace}}\build
      run: cmake --build . --config ${{env.BUILD_TYPE}} --target FabSoftenDocs

    - name: Deploy Docs
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ${{github.workspace}}\build\docs\html
